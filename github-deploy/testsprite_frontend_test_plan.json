[
  {
    "id": "TC001",
    "title": "Access Public Dashboard Without Authentication",
    "description": "Verify that the user can access the operational dashboard via the public link without any authentication and see real-time pipeline and KPIs.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to the public URL of Adwonder CRM"
      },
      {
        "type": "assertion",
        "description": "Check that the dashboard loads without requiring login"
      },
      {
        "type": "assertion",
        "description": "Verify real-time pipeline statuses, deal KPIs, and metrics are visible"
      },
      {
        "type": "assertion",
        "description": "Confirm no login prompts or authentication barriers appear"
      }
    ]
  },
  {
    "id": "TC002",
    "title": "Client CRUD Operations",
    "description": "Ensure Create, Read, Update and Delete operations for clients work correctly with data persistence.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to Client Management section"
      },
      {
        "type": "action",
        "description": "Create a new client with valid details including status and contact info"
      },
      {
        "type": "assertion",
        "description": "Verify new client is listed with correct details"
      },
      {
        "type": "action",
        "description": "Update existing client information"
      },
      {
        "type": "assertion",
        "description": "Confirm updates are reflected in the client list"
      },
      {
        "type": "action",
        "description": "Delete a client entry"
      },
      {
        "type": "assertion",
        "description": "Confirm client is removed from the list and database"
      }
    ]
  },
  {
    "id": "TC003",
    "title": "Import Client Data via Excel",
    "description": "Users should be able to upload an Excel file and import multiple clients with correct data mapping and no data loss.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to Client Management and open import via Excel option"
      },
      {
        "type": "action",
        "description": "Upload a sample Excel file with multiple client records"
      },
      {
        "type": "assertion",
        "description": "Verify all clients from the file are added correctly with right statuses"
      },
      {
        "type": "assertion",
        "description": "Check that no data corruption or loss has occurred"
      }
    ]
  },
  {
    "id": "TC004",
    "title": "Deal CRUD and Status Update",
    "description": "Validate that users can create, read, update, and delete deals with correct states, values, and deadlines.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to Deal Management"
      },
      {
        "type": "action",
        "description": "Create a new deal with custom title, estimated financial values and set state as 'In Progress'"
      },
      {
        "type": "assertion",
        "description": "Confirm the deal is visible with correct attributes and values"
      },
      {
        "type": "action",
        "description": "Update deal state to 'Won' or 'Lost' and modify related info"
      },
      {
        "type": "assertion",
        "description": "Verify updated state and values are properly saved and displayed"
      },
      {
        "type": "action",
        "description": "Delete a deal"
      },
      {
        "type": "assertion",
        "description": "Confirm the deal no longer appears and data is removed"
      }
    ]
  },
  {
    "id": "TC005",
    "title": "Activity Tracking with Notes and Reminders",
    "description": "Ensure that calls, emails, and meetings can be tracked with outcomes, notes, and optional reminders.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to Activity Tracking section"
      },
      {
        "type": "action",
        "description": "Create new activity: a call with notes and set an outcome"
      },
      {
        "type": "assertion",
        "description": "Verify the activity is saved with all details including notes and outcome"
      },
      {
        "type": "action",
        "description": "Add a reminder to an existing activity"
      },
      {
        "type": "assertion",
        "description": "Confirm the reminder is saved and triggers notification at scheduled time"
      },
      {
        "type": "action",
        "description": "Modify or delete an activity"
      },
      {
        "type": "assertion",
        "description": "Check that changes are reflected in the activity list"
      }
    ]
  },
  {
    "id": "TC006",
    "title": "Operational Dashboard Real-time Updates",
    "description": "Verify the dashboard shows up-to-date pipeline views, metrics, KPIs, and kanban board with interaction capabilities.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Open the Operational Dashboard"
      },
      {
        "type": "assertion",
        "description": "Check that kanban pipeline columns correctly show deals in various states"
      },
      {
        "type": "assertion",
        "description": "Verify displayed KPIs and metrics match backend data"
      },
      {
        "type": "action",
        "description": "Perform updates on deals or activities affecting dashboard data"
      },
      {
        "type": "assertion",
        "description": "Verify the dashboard updates in real-time reflecting changes"
      }
    ]
  },
  {
    "id": "TC007",
    "title": "Project Management with Collaborators, Budget and Tokens",
    "description": "Validate creation and management of projects including collaborator assignments, budgets, timelines, and token incentive management.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to Project Operations"
      },
      {
        "type": "action",
        "description": "Create a project with collaborators, a defined budget, timeline, and initial token allocation"
      },
      {
        "type": "assertion",
        "description": "Confirm the project details and assigned collaborators are correctly displayed"
      },
      {
        "type": "action",
        "description": "Modify budget, timeline and token allocations"
      },
      {
        "type": "assertion",
        "description": "Verify updates are saved and shown accurately"
      },
      {
        "type": "action",
        "description": "Delete or archive a project"
      },
      {
        "type": "assertion",
        "description": "Confirm removal or status update of project"
      }
    ]
  },
  {
    "id": "TC008",
    "title": "Collaborator CRUD and Role Management",
    "description": "Ensure collaborators can be created, edited, assigned to projects, and deleted with roles, compensations, and token balances managed properly.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to collaborator management"
      },
      {
        "type": "action",
        "description": "Add a new collaborator with role and compensation details"
      },
      {
        "type": "assertion",
        "description": "Verify the collaborator appears with accurate attributes"
      },
      {
        "type": "action",
        "description": "Assign collaborator to projects and adjust token balances"
      },
      {
        "type": "assertion",
        "description": "Confirm assignments and tokens are associated correctly"
      },
      {
        "type": "action",
        "description": "Update and delete collaborator profiles"
      },
      {
        "type": "assertion",
        "description": "Check that changes and removals persist correctly"
      }
    ]
  },
  {
    "id": "TC009",
    "title": "Notification System for Deadlines and Follow-ups",
    "description": "Test that contract deadline and follow-up reminders are automatically generated and notifications are timely and accurate.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Create or edit contracts and activities setting deadlines and follow-up schedules"
      },
      {
        "type": "assertion",
        "description": "Check that reminders are automatically scheduled by the system"
      },
      {
        "type": "assertion",
        "description": "At reminder time, verify user receives notification in Notification Center"
      },
      {
        "type": "action",
        "description": "Mark reminder as read or dismiss notification"
      },
      {
        "type": "assertion",
        "description": "Confirm notification status updates accordingly"
      }
    ]
  },
  {
    "id": "TC010",
    "title": "Reports Generation and Excel Export",
    "description": "Verify that reports can be generated with correct analytics and exported to Excel without data loss or format issues.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to Reports & Analytics section"
      },
      {
        "type": "action",
        "description": "Generate different types of reports showing charts and performance analysis"
      },
      {
        "type": "assertion",
        "description": "Verify report data matches backend and dashboard indicators"
      },
      {
        "type": "action",
        "description": "Export reports in Excel format"
      },
      {
        "type": "assertion",
        "description": "Open exported files and check for data completeness and formatting correctness"
      }
    ]
  },
  {
    "id": "TC011",
    "title": "Sidebar Navigation Lazy Loading and Active State",
    "description": "Validate that sidebar navigation loads components lazily and the active state is correctly maintained and visually indicated.",
    "category": "ui",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Open the application and observe sidebar component loading"
      },
      {
        "type": "assertion",
        "description": "Ensure components load on demand and not all at once"
      },
      {
        "type": "action",
        "description": "Click through each sidebar menu item"
      },
      {
        "type": "assertion",
        "description": "Verify active state changes accordingly and highlights the correct section"
      }
    ]
  },
  {
    "id": "TC012",
    "title": "Error Handling for Invalid Client Data Input",
    "description": "Verify that invalid client data inputs are caught by validation and appropriate error messages are displayed without crashing the UI.",
    "category": "error handling",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Attempt to create or update a client with missing mandatory fields and invalid formats"
      },
      {
        "type": "assertion",
        "description": "Check that validation errors appear next to each invalid field"
      },
      {
        "type": "assertion",
        "description": "Ensure no data is saved and UI remains stable"
      }
    ]
  },
  {
    "id": "TC013",
    "title": "Error Handling for Deal Deadline Conflicts",
    "description": "Test that conflicting or past deal deadlines trigger appropriate warnings and prevent invalid submissions.",
    "category": "error handling",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Create or edit a deal with a deadline date in the past"
      },
      {
        "type": "assertion",
        "description": "Validate error message prompts user to correct the deadline"
      },
      {
        "type": "action",
        "description": "Try setting overlapping deadlines on related deals if applicable"
      },
      {
        "type": "assertion",
        "description": "Confirm system alerts or flags potential conflicts"
      }
    ]
  },
  {
    "id": "TC014",
    "title": "Data Security Check on Public Access",
    "description": "Ensure that unauthenticated access does not expose sensitive data or administrative functions and read-only views are enforced.",
    "category": "security",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Access the system via public link without login"
      },
      {
        "type": "assertion",
        "description": "Confirm no editing controls or administrative options are accessible"
      },
      {
        "type": "assertion",
        "description": "Check that sensitive data fields are not exposed in public views"
      }
    ]
  },
  {
    "id": "TC015",
    "title": "TypeScript Type Coverage Validation",
    "description": "Verify that all data models, interfaces, and components have comprehensive TypeScript typing enforcing type safety.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Review source code and run static type checking tools"
      },
      {
        "type": "assertion",
        "description": "Verify zero TypeScript errors or warnings related to types"
      },
      {
        "type": "assertion",
        "description": "Check that all service interfaces and React component props have defined types"
      }
    ]
  },
  {
    "id": "TC016",
    "title": "Graceful Error Reporting for Backend Failures",
    "description": "Test that errors from backend or Supabase database failures are caught and displayed gracefully to users with meaningful messages.",
    "category": "error handling",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Simulate backend failure or loss of database connection during CRUD operations"
      },
      {
        "type": "assertion",
        "description": "Validate that error messages are shown without UI crashes"
      },
      {
        "type": "assertion",
        "description": "Check that users can retry or cancel operations"
      }
    ]
  },
  {
    "id": "TC017",
    "title": "Scalability of Future Features Integration",
    "description": "Ensure that current abstractions allow for smooth integration of multi-user roles, API integrations, and cloud data storage expansions.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Review codebase for abstraction layers and modular design of user management and data layers"
      },
      {
        "type": "assertion",
        "description": "Check integration points readiness for multi-user roles and external APIs"
      },
      {
        "type": "assertion",
        "description": "Verify database schemas and service designs support scalability"
      }
    ]
  }
]
